# Based on the "trust" template v0.1.2
# https://github.com/japaric/trust/tree/v0.1.2

dist: trusty
language: rust
services: docker
sudo: required
env:
  global:
    - CRATE_NAME=ImproVe

matrix:
  # don't need
  include:
    # Android
    #- env: TARGET=aarch64-linux-android DISABLE_TESTS=1
    #- env: TARGET=arm-linux-androideabi DISABLE_TESTS=1
    #- env: TARGET=armv7-linux-androideabi DISABLE_TESTS=1
    #- env: TARGET=i686-linux-android DISABLE_TESTS=1
    #- env: TARGET=x86_64-linux-android DISABLE_TESTS=1

    # iOS
    #- env: TARGET=aarch64-apple-ios DISABLE_TESTS=1
    #  os: osx
    #- env: TARGET=armv7-apple-ios DISABLE_TESTS=1
    #  os: osx
    #- env: TARGET=armv7s-apple-ios DISABLE_TESTS=1
    #  os: osx
    #- env: TARGET=i386-apple-ios DISABLE_TESTS=1
    #  os: osx
    #- env: TARGET=x86_64-apple-ios DISABLE_TESTS=1
    #  os: osx

    # Linux
    - env: TARGET=aarch64-unknown-linux-gnu
    #- env: TARGET=arm-unknown-linux-gnueabi
    #- env: TARGET=armv7-unknown-linux-gnueabihf
    #- env: TARGET=i686-unknown-linux-gnu
    #- env: TARGET=i686-unknown-linux-musl
    #- env: TARGET=mips-unknown-linux-gnu
    #- env: TARGET=mips64-unknown-linux-gnuabi64
    #- env: TARGET=mips64el-unknown-linux-gnuabi64
    #- env: TARGET=mipsel-unknown-linux-gnu
    #- env: TARGET=powerpc-unknown-linux-gnu
    #- env: TARGET=powerpc64-unknown-linux-gnu
    #- env: TARGET=powerpc64le-unknown-linux-gnu
    #- env: TARGET=s390x-unknown-linux-gnu DISABLE_TESTS=1
    - env: TARGET=x86_64-unknown-linux-gnu
    - env: TARGET=x86_64-unknown-linux-musl

    # OSX
    #- env: TARGET=i686-apple-darwin
    #  os: osx
    #- env: TARGET=x86_64-apple-darwin
    #  os: osx

    # *BSD
    #- env: TARGET=i686-unknown-freebsd DISABLE_TESTS=1
    #- env: TARGET=x86_64-unknown-freebsd DISABLE_TESTS=1
    #- env: TARGET=x86_64-unknown-netbsd DISABLE_TESTS=1

    # Windows
    - env: TARGET=x86_64-pc-windows-gnu

    # Bare metal
    # These targets don't support std and as such are likely not suitable for
    # most crates.
    # - env: TARGET=thumbv6m-none-eabi
    # - env: TARGET=thumbv7em-none-eabi
    # - env: TARGET=thumbv7em-none-eabihf
    # - env: TARGET=thumbv7m-none-eabi

    # Testing other channels
    - env: TARGET=x86_64-unknown-linux-gnu
      rust: nightly
    #- env: TARGET=x86_64-apple-darwin
    #  os: osx
    #  rust: nightly

before_install:
  - sudo apt-get update -qq
  - sudo apt-get install -qq cppcheck
  - sudo apt-get install -qq libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev libegl1-mesa-dev libgles2-mesa-dev
  - export RUSTFLAGS="$RUSTFLAGS -L./usr/local/include/SDL2"
  #- set -e
  #- sudo apt-get update
  #- sudo apt-get install -y libegl1-mesa-dev libgles2-mesa-dev libsdl2-dev libsdl2-ttf-dev
  - export PATH="/usr/local/bin:$PATH"
  - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$PATH
  - echo $PATH
  - dpkg -L libsdl2-dev
  - #if [[ "$OSTYPE" == "darwin"* ]] ; then brew install sdl2 sdl2-ttf ; fi
  - rustup self update

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it: `travis encrypt 0123456789012345678901234567890123456789
  # - Paste the output down here
  api_key:
    secure: m0fZfqTA975sL4dznzVbGmUISTB34SrVorTQFyoRCDGJIQ819NFfyzkOTgokhjmOiRT5RfDX7YqdqYcXdbT+Q/duSwwyiAhmGieypunGcE1fOcgHYkYH9nadELJefSzt5DyQnUo8En7ptdRoiLzMDU4L96J98fPHVCktpUYfbDLvlVh/mgrgtSJR+WbV7FkbK51wGyc2E3bEzvsaanTPHUpQKLSLNL3RzC3u6m/1prZ31IpLliYeGQ63sbr3k9KGK77qn4B0jM+/YMsIzjqHEQTxDTqxAd69gIFmkpzhsOuwl7MnGpwDoH0U4uvw8Pk7e1d8UxI00m3sRg5U3+gQeEoAk9K9Q54Dj2C+FZqHYKfSYKLFnqBqkP9UqSe9wOpDogLshpd27i/1pkdUON/8M1ri6enLyExIijW8v1v8VfvLTRJVyApaWzg5CQdMclV9TtIKjNHCDazokWgI3U7nyp0ymmBIfq3i30og6Xrbm2sm1IsrQuoUfDaxGjr0H1rv8aLaxJY9e3KT2lGpYQaFHFE0+07DWPCB9U3JCW8CKTvytBEs70YPc95o3xFOymeUGlMrWtpNHovlrX0v6c/rEDJ1OeC0uVm1XimBa+vxMZtXDXxF3bxPKTgZ1UXXMtqvVqAhy4BsynAzMOLOTfZiF9LEV5wPqTUKZJF4g8eJ8sY=
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    # TODO Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - travis-build-attempt

notifications:
  email:
    on_success: never
